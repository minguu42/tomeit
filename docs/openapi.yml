openapi: 3.0.0

info:
  title: Tomeit API
  version: 0.1.0

servers:
  - url: http://localhost:8080/
    description: 開発用ローカルサーバ

paths:
  /tasks:
    post:
      tags:
        - tasks
      summary: 新しいタスクを作成する
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
              properties:
                title:
                  type: string
                  example: タスク1
                estimatedPomoNum:
                  type: integer
                  default: 0
                dueOn:
                  type: string
                  format: date-time
      responses:
        "201":
          description: 成功
          headers:
            Location:
              schema:
                type: string
                example: https://api.tomeit.com/tasks/1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          $ref: "#/components/responses/ErrBadRequest"
        "401":
          $ref: "#/components/responses/ErrUnauthorized"
      security:
        - bearerAuth: []
    get:
      tags:
        - tasks
      summary: タスク一覧を取得する
      description: 作成日時の昇順で最大30件まで取得する。
      parameters:
        - name: isCompleted
          description: タスクが完了したかで絞り込む。
          in: "query"
          schema:
            type: string
            format: boolean
        - name: completedOn
          description: タスクを完了した日付で絞り込む。
          in: "query"
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tasks"
        "401":
          $ref: "#/components/responses/ErrUnauthorized"
      security:
        - beaerAuth: []
  /tasks/{taskID}:
    patch:
      summary: 指定したタスクを更新する
      tags:
        - tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                estimatedPomoNum:
                  type: integer
                dueOn:
                  type: string
                  format: date-time
                completedOn:
                  type: string
                  format: date-time
      responses:
        "200":
          description: 成功
        "400":
          $ref: "#/components/responses/ErrBadRequest"
        "401":
          $ref: "#/components/responses/ErrUnauthorized"
        "404":
          $ref: "#/components/responses/ErrNotFound"
      security:
        - bearAuth: []
    delete:
      summary: 指定したタスクを削除する
      tags:
        - tasks
      parameters:
        - $ref: "#/components/parameters/taskID"
      responses:
        "204":
          description: 成功
        "400":
          $ref: "#/components/responses/ErrBadRequest"
        "401":
          $ref: "#/components/responses/ErrUnauthorized"
        "404":
          $ref: "#/components/responses/ErrNotFound"
      security:
        - beaerAuth: []
  /pomodoros:
    post:
      tags:
        - pomodoros
      summary: 新しいポモドーロ記録を作成する
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - completedAt
              properties:
                completedAt:
                  type: string
                  format: date-time
      responses:
        "201":
          description: 成功
          headers:
            Location:
              schema:
                type: string
                example: https://api.tomeit.com/pomodoros/1
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pomodoro"
        "400":
          $ref: "#/components/responses/ErrBadRequest"
        "401":
          $ref: "#/components/responses/ErrUnauthorized"
      security:
        - beaerAuth: []
    get:
      tags:
        - pomodoros
      summary: ポモドーロ記録一覧を取得する
      description: 作成日時の昇順で最大30件まで取得する。
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pomodoros"
        "401":
          $ref: "#/components/responses/ErrUnauthorized"
      security:
        - beaerAuth: []
  /pomodoros/{pomodoroID}:
    delete:
      summary: 指定したポモドーロ記録を削除する
      tags:
        - pomodoros
      parameters:
        - $ref: "#/components/parameters/pomodoroID"
      responses:
        "204":
          description: 成功
        "400":
          $ref: "#/components/responses/ErrBadRequest"
        "401":
          $ref: "#/components/responses/ErrUnauthorized"
        "404":
          $ref: "#/components/responses/ErrNotFound"
      security:
        - beaerAuth: []
  /healthz:
    get:
      tags:
        - monitoring
      summary: サーバの状態を確認する
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: OK

components:
  schemas:
    Task:
      type: object
      required:
        - id
        - title
        - estimatedPomoNum
        - completedPomoNum
        - dueOn
        - completedOn
        - createdAt
        - updatedAt
      properties:
        id:
          description: タスク ID
          type: integer
          minimum: 1
          example: 1
        title:
          description: タイトル
          type: string
          example: タスク1
        estimatedPomoNum:
          description: 推定されるポモドーロ数
          type: integer
          minimum: 0
          maximum: 6
          default: 4
        completedPomoNum:
          description: 実際に完了したポモドーロ数
          type: integer
          minimum: 0
          default: 0
        dueOn:
          description: |
            期限日付

            存在しない場合は ""（空の文字列）を返す。
          type: string
          format: date-time
        completedOn:
          description: |
            完了した日付

            完了していない場合は ""（空の文字列）を返す。
          type: string
          format: date-time
          example: ""
        createdAt:
          description: 作成日時
          type: string
          format: date-time
        updatedAt:
          description: 更新日時
          type: string
          format: date-time
    Tasks:
      type: object
      required:
        - tasks
      properties:
        tasks:
          description: タスク一覧
          type: array
          items:
            $ref: "#/components/schemas/Task"
    Pomodoro:
      type: object
      required:
        - id
        - task
        - createdAt
      properties:
        id:
          description: ポモドーロ記録ID
          type: integer
          minimum: 1
          example: 1
        task:
          $ref: "#/components/schemas/Task"
        createdAt:
          description: 作成日時
          type: string
          format: date-time
    Pomodoros:
      type: object
      required:
        - pomodoros
      properties:
        pomodoros:
          description: ポモドーロ記録一覧
          type: array
          items:
            $ref: "#/components/schemas/Pomodoro"
  responses:
    ErrBadRequest:
      description: リクエストが間違っている
      content:
        application/json:
          schema:
            type: object
            required:
              - status
              - error
            properties:
              status:
                description: ユーザ向けの大まかなエラーの説明
                type: string
                example: リクエストに何らかの間違いがあります。内容を確かめてからもう一度お試しください。
              error:
                description: 開発者向けの詳細なエラーの説明
                type: string
                example: some error messages
    ErrUnauthorized:
      description: ユーザの認証に失敗した
      content:
        application/json:
          schema:
            type: object
            required:
              - status
              - error
            properties:
              status:
                description: ユーザ向けの大まかなエラーの説明
                type: string
                example: ユーザの認証に失敗しました。ログイン後にもう一度お試しください。
              error:
                description: 開発者向けの詳細なエラーの説明
                type: string
                example: some error messages
    ErrNotFound:
      description: リソースが存在しない
      content:
        application/json:
          schema:
            type: object
            required:
              - status
              - error
            properties:
              status:
                description: ユーザ向けの大まかなエラーの説明
                type: string
                example: 指定したリソースが存在しません。
              error:
                description: 開発者向けの詳細なエラーの説明
                type: string
                example: some error messages
    ErrInternalServerError:
      description: サーバで何らかのエラーが発生した
      content:
        application/json:
          schema:
            type: object
            required:
              - status
              - error
            properties:
              status:
                description: ユーザ向けの大まかなエラーの説明
                type: string
                example: サーバで何らかのエラーが発生しました。時間を置いてからもう一度お試しください。
              error:
                description: 開発者向けの詳細なエラーの説明
                type: string
                example: some error messages
  parameters:
    taskID:
      name: taskID
      in: path
      description: 一意のタスクを特定するタスク ID
      required: true
      schema:
        type: integer
        minimum: 1
    pomodoroID:
      name: pomodoroID
      in: path
      description: 一意のポモドーロ記録を特定するポモドーロ記録 ID
      required: true
      schema:
        type: integer
        minimum: 1
  securitySchemes:
    firebaseAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: tasks
    description: タスク関連API
  - name: pomodoros
    description: ポモドーロ関連API
  - name: monitoring
    description: モニタリング関連API
